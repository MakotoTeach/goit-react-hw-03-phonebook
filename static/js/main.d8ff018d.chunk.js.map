{"version":3,"sources":["AddContactForm/AddContactForm.module.css","ContactListItem/ContactListItem.js","ContactList.js","AddContactForm/AddContactForm.js","Filter/Filter.js","App.js","index.js","ContactListItem/ContactListItem.module.css","Filter/Filter.module.css"],"names":["module","exports","ContactListItem","name","number","onRemove","className","styles","listItem","listItemBtn","type","onClick","ContactList","contacts","onRemoveContact","map","id","key","AddContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","submitForm","onSubmit","formLabel","autoComplete","formInput","onChange","formButton","Component","Filter","onChangeFilter","filterLabel","filterInput","App","filter","addContact","isExist","find","contact","uuid","alert","prevState","removeContact","contactId","changeFilter","getVisibleContacts","toLowerCase","includes","contactsLS","localStorage","getItem","JSON","parse","prevProps","cotacts","setItem","stringify","visibleContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8ff018d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-width\":\"150px\",\"submitForm\":\"AddContactForm_submitForm__29wA0\",\"formLabel\":\"AddContactForm_formLabel__cKRSf\",\"formInput\":\"AddContactForm_formInput__1ZBg9\",\"formButton\":\"AddContactForm_formButton__24zTS\"};","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css'\r\n\r\nfunction ContactListItem({ name, number, onRemove }) {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p>{name}:</p>\r\n      <p>{number}</p>\r\n      <button className={styles.listItemBtn}type=\"button\" onClick={onRemove}>Delete</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name:PropTypes.string.isRequired,\r\n  number:PropTypes.string.isRequired,\r\n  onRemove:PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nfunction ContactList({ contacts, onRemoveContact}) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem key={id} name={name} number={number}  onRemove={()=> onRemoveContact(id)}/>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\nContactList.propTypes ={\r\n  contacts:PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id:PropTypes.string.isRequired,\r\n      name:PropTypes.string.isRequired,\r\n      number:PropTypes.string.isRequired\r\n    }).isRequired,\r\n  ),\r\n  onRemoveContact:PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./AddContactForm.module.css\";\r\n\r\nexport default class AddContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.submitForm} onSubmit={this.handleSubmit}>\r\n        <label className={styles.formLabel}>\r\n          Name\r\n          <input\r\n            autoComplete=\"off\"\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.formLabel}>\r\n          Number\r\n          <input\r\n            autoComplete=\"off\"\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.formButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <label className={styles.filterLabel}>\r\n        Find contact by name\r\n        <input\r\n          className={styles.filterInput}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\nimport ContactList from \"./ContactList\";\r\nimport AddContactForm from \"./AddContactForm/AddContactForm\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\r\n    ],\r\n    filter: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contactsLS = localStorage.getItem(\"contacts\");\r\n\r\n    if (contactsLS) {\r\n      this.setState({\r\n        contacts: JSON.parse(contactsLS)\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    \r\n    if (prevState.contacts !== this.state.cotacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  addContact = (name, number) => {\r\n    const isExist = this.state.contacts.find(contact => contact.name === name);\r\n\r\n    const contact = {\r\n      id: uuid(),\r\n      name,\r\n      number\r\n    };\r\n\r\n    if (isExist) {\r\n      alert(`contact with name ${name} is allready exist`);\r\n    } else {\r\n      this.setState(prevState => {\r\n        return {\r\n          contacts: [...prevState.contacts, contact]\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId)\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    return this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <AddContactForm onAddContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        {contacts.length > 2 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        {visibleContacts.length > 0 && (\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onRemoveContact={this.removeContact}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './base.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__5jw4l\",\"listItemBtn\":\"ContactListItem_listItemBtn__13Oud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-width\":\"150px\",\"filterLabel\":\"Filter_filterLabel__2PXZD\",\"filterInput\":\"Filter_filterInput__31czi\"};"],"sourceRoot":""}